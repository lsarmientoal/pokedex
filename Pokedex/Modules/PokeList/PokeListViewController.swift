//
//  PokeListViewController.swift
//  Pokedex
//
//  Created by Laura Sarmiento on 17/09/19.
//  Copyright (c) 2019 Medrar. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxSwift

final class PokeListViewController: UIViewController {

    @IBOutlet private weak var tableView: UITableView! {
        didSet {
            tableView.tableFooterView = UIView()
            tableView.register(R.nib.pokeListItemTableViewCell)
        }
    }
    
    let searchController = UISearchController(searchResultsController: nil)
    
    // MARK: - Public properties -

    var presenter: PokeListPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        title = "Pokedex"
        navigationItem.largeTitleDisplayMode = .automatic
        presenter.loadPokemonList()
        
        unowned let `self` = self
        
        tableView.rx.modelSelected(Pokemon.self)
            .map { $0.id }
            .subscribe(onNext: self.presenter.showPokemonDetail)
            .disposed(by: disposeBag)
        
        // Configure Search Controller
        searchController.searchResultsUpdater = self
        searchController.obscuresBackgroundDuringPresentation = false
        searchController.searchBar.placeholder = "Search pokemon"
        navigationItem.searchController = searchController
        definesPresentationContext = true
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        navigationController?.setNavigationBarHidden(false, animated: true)
    }
}

// MARK: - Extensions -

extension PokeListViewController: PokeListViewInterface {
    
    func bindTableViewData(_ source: Observable<[PokeListSectionModel]>, withDataSource dataSource: PokeListDataSource) {
        source.bind(to: tableView.rx.items(dataSource: dataSource))
            .disposed(by: disposeBag)
    }
}

extension PokeListViewController: UISearchResultsUpdating {
    
    // MARK: - UISearchResultsUpdating Delegate
    func updateSearchResults(for searchController: UISearchController) {
        presenter.searchPokemon(withCriteria: searchController.searchBar.text ?? "")
    }
}
